{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["localStorage","setItem","bankOne","keyCode","keyTrigger","id","url","bankTwo","activeStyle","backgroundColor","boxShadow","height","marginTop","inactiveStyle","DrumPad","props","state","padStyle","playSound","bind","handleKeyPress","activatePad","document","addEventListener","this","removeEventListener","e","power","setState","sound","getElementById","currentTime","play","setTimeout","updateDisplay","clipId","replace","onClick","className","style","src","clip","React","Component","PadBank","padBank","currentPadBank","map","drumObj","i","padBankArr","App","display","String","fromCharCode","currentPadBankId","sliderVal","displayClipName","selectBank","adjustVolume","powerControl","clearDisplay","name","target","value","Math","round","powerSlider","float","bankSlider","slice","call","getElementsByClassName","forEach","volume","clipVolume","icon","faMusic","transform","type","min","max","step","onChange","ReactDOM","render","Boolean","window","location","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.29dda35c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.scss';\n\nimport { faMusic} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n// coded by @no-stack-dub-sack (github) / @no_stack_sub_sack (codepen)\nconst projectName = 'drum-machine';\nlocalStorage.setItem('example_project', 'Drum Machine');\n\nconst bankOne = [{\n    keyCode: 81,\n    keyTrigger: 'Q',\n    id: 'Heater-1',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n  }, {\n    keyCode: 87,\n    keyTrigger: 'W',\n    id: 'Heater-2',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n  }, {\n    keyCode: 69,\n    keyTrigger: 'E',\n    id: 'Heater-3',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n  }, {\n    keyCode: 65,\n    keyTrigger: 'A',\n    id: 'Heater-4',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n  }, {\n    keyCode: 83,\n    keyTrigger: 'S',\n    id: 'Clap',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n  }, {\n    keyCode: 68,\n    keyTrigger: 'D',\n    id: 'Open-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n  }, {\n    keyCode: 90,\n    keyTrigger: 'Z',\n    id: \"Kick-n'-Hat\",\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n  }, {\n    keyCode: 88,\n    keyTrigger: 'X',\n    id: 'Kick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n  }, {\n    keyCode: 67,\n    keyTrigger: 'C',\n    id: 'Closed-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n  },\n];\n\nconst bankTwo = [{\n  keyCode: 81,\n  keyTrigger: 'Q',\n  id: 'Chord-1',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\n}, {\n  keyCode: 87,\n  keyTrigger: 'W',\n  id: 'Chord-2',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\n}, {\n  keyCode: 69,\n  keyTrigger: 'E',\n  id: 'Chord-3',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\n}, {\n  keyCode: 65,\n  keyTrigger: 'A',\n  id: 'Shaker',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\n}, {\n  keyCode: 83,\n  keyTrigger: 'S',\n  id: 'Open-HH',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\n}, {\n  keyCode: 68,\n  keyTrigger: 'D',\n  id: 'Closed-HH',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\n}, {\n  keyCode: 90,\n  keyTrigger: 'Z',\n  id: 'Punchy-Kick',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\n}, {\n  keyCode: 88,\n  keyTrigger: 'X',\n  id: 'Side-Stick',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\n}, {\n  keyCode: 67,\n  keyTrigger: 'C',\n  id: 'Snare',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\n}];\n\nconst activeStyle = {\n  backgroundColor: 'orange',\n  boxShadow: \"0 3px orange\",\n  height: 77,\n  marginTop: 13\n}\n\nconst inactiveStyle = {\n  backgroundColor: 'grey',\n  marginTop: 10,\n  boxShadow: \"3px 3px 5px black\"\n}\n\nclass DrumPad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      padStyle: inactiveStyle\n    }\n    this.playSound = this.playSound.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.activatePad = this.activatePad.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n  handleKeyPress(e) {\n    if (e.keyCode === this.props.keyCode) {\n      this.playSound();\n    }\n  }\n  activatePad() {\n    if (this.props.power) {\n      this.state.padStyle.backgroundColor === 'orange' ?\n        this.setState({\n          padStyle: inactiveStyle\n        }) :\n        this.setState({\n          padStyle: activeStyle\n        });\n    } else {\n      this.state.padStyle.marginTop === 13 ?\n        this.setState({\n          padStyle: inactiveStyle\n        }) :\n        this.setState({\n          padStyle: {\n            height: 77,\n            marginTop: 13,\n            backgroundColor: 'grey',\n            boxShadow: \"0 3px grey\"\n          }\n        });\n    }\n  }\n  playSound(e) {\n    const sound = document.getElementById(this.props.keyTrigger);\n    sound.currentTime = 0;\n    sound.play();\n    this.activatePad();\n    setTimeout(() => this.activatePad(), 100);\n    this.props.updateDisplay(this.props.clipId.replace(/-/g, ' '));\n  }\n  render() {\n    return (\n      <div id={this.props.clipId} \n        onClick={this.playSound} \n        className=\"drum-pad\" \n        style={this.state.padStyle} >\n          <audio className='clip' id={this.props.keyTrigger} src={this.props.clip}></audio>\n          {this.props.keyTrigger}\n      </div>\n    )\n  }\n}\n\nclass PadBank extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let padBank;\n    this.props.power ?\n      padBank = this.props.currentPadBank.map((drumObj, i, padBankArr) => {\n        return (\n          <DrumPad \n\t\t\t\t\t\tclipId={padBankArr[i].id} \n\t\t\t\t\t\tclip={padBankArr[i].url}\n\t\t\t\t\t\tkeyTrigger={padBankArr[i].keyTrigger}\n\t\t\t\t\t\tkeyCode={padBankArr[i].keyCode} \n\t\t\t\t\t\tupdateDisplay={this.props.updateDisplay} \n\t\t\t\t\t\tpower={this.props.power} />\n        )\n      }) :\n      padBank = this.props.currentPadBank.map((drumObj, i, padBankArr) => {\n        return (\n          <DrumPad \n\t\t\t\t\t\tclipId={padBankArr[i].id} \n\t\t\t\t\t\tclip=\"#\"\n\t\t\t\t\t\tkeyTrigger={padBankArr[i].keyTrigger}\n\t\t\t\t\t\tkeyCode={padBankArr[i].keyCode} \n\t\t\t\t\t\tupdateDisplay={this.props.updateDisplay} \n\t\t\t\t\t\tpower={this.props.power} />\n        )\n      });\n    return (\n      <div className=\"pad-bank\" >\n\t\t\t\t{padBank}\n\t\t\t</div>\n    )\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      power: true,\n      display: String.fromCharCode(160),\n      currentPadBank: bankOne,\n      currentPadBankId: 'Heater Kit',\n      sliderVal: 0.3\n    }\n    this.displayClipName = this.displayClipName.bind(this);\n    this.selectBank = this.selectBank.bind(this);\n    this.adjustVolume = this.adjustVolume.bind(this);\n    this.powerControl = this.powerControl.bind(this);\n    this.clearDisplay = this.clearDisplay.bind(this);\n  }\n  powerControl() {\n    this.setState({\n      power: !this.state.power,\n      display: String.fromCharCode(160)\n    });\n  }\n  selectBank() {\n    if (this.state.power) {\n      this.state.currentPadBankId === 'Heater Kit' ?\n        this.setState({\n          currentPadBank: bankTwo,\n          display: 'Smooth Piano Kit',\n          currentPadBankId: 'Smooth Piano Kit',\n        }) :\n        this.setState({\n          currentPadBank: bankOne,\n          display: 'Heater Kit',\n          currentPadBankId: 'Heater Kit',\n        });\n    }\n  }\n  displayClipName(name) {\n    if (this.state.power) {\n      this.setState({\n        display: name\n      });\n    }\n  }\n  adjustVolume(e) {\n    if (this.state.power) {\n      this.setState({\n        sliderVal: e.target.value,\n        display: \"Volume: \" + Math.round(e.target.value * 100)\n      });\n      setTimeout(() => this.clearDisplay(), 1000);\n    }\n  }\n  clearDisplay() {\n    this.setState({\n      display: String.fromCharCode(160)\n    });\n  }\n  render() {\n    const powerSlider = this.state.power ? {\n      float: 'right'\n    } : {\n      float: 'left'\n    };\n    const bankSlider = this.state.currentPadBank === bankOne ? {\n      float: 'left'\n    } : {\n      float: 'right'\n    }; {\n      const clips = [].slice.call(document.getElementsByClassName('clip'));\n      clips.forEach(sound => {\n        sound.volume = this.state.sliderVal\n      });\n    }\n    return (\n      <div id=\"drum-machine\" className=\"inner-container\">\n\t\t\t\t<PadBank  \t\n\t\t\t\t\tpower={this.state.power}\n\t\t\t\t\tupdateDisplay={this.displayClipName}\n\t\t\t\t\tclipVolume={this.state.sliderVal}\n\t\t\t\t\tcurrentPadBank={this.state.currentPadBank} />\n        \n        <div className=\"logo\">\n \n            <div className=\"inner-logo\">{'Creepiano'+ String.fromCharCode(160)}</div>\n            <FontAwesomeIcon icon={faMusic}  transform=\"right-1.5\"/>\n            <br></br>\n        \n          </div>\n\n\t\t\t\t<div className=\"controls-container\">\n        \n\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t<p>Power</p>\n\t\t\t\t\t\t<div onClick={this.powerControl} className=\"select\">\n\t\t\t\t\t\t\t<div style={powerSlider} className=\"inner\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p id=\"display\">\n\t\t\t\t\t\t{this.state.display}\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className=\"volume-slider\">\n\t\t\t\t\t\t<input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" value={this.state.sliderVal} onChange={this.adjustVolume} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t<p>Bank</p>\n\t\t\t\t\t\t<div onClick={this.selectBank} className=\"select\">\n\t\t\t\t\t\t\t<div style={bankSlider} className=\"inner\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}